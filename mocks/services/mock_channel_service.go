// Code generated by MockGen. DO NOT EDIT.
// Source: services/channel_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/weni/whatsapp-router/models"
)

// MockChannelService is a mock of ChannelService interface.
type MockChannelService struct {
	ctrl     *gomock.Controller
	recorder *MockChannelServiceMockRecorder
}

// MockChannelServiceMockRecorder is the mock recorder for MockChannelService.
type MockChannelServiceMockRecorder struct {
	mock *MockChannelService
}

// NewMockChannelService creates a new mock instance.
func NewMockChannelService(ctrl *gomock.Controller) *MockChannelService {
	mock := &MockChannelService{ctrl: ctrl}
	mock.recorder = &MockChannelServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChannelService) EXPECT() *MockChannelServiceMockRecorder {
	return m.recorder
}

// FindChannel mocks base method.
func (m *MockChannelService) FindChannel(arg0 *models.Channel) (*models.Channel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindChannel", arg0)
	ret0, _ := ret[0].(*models.Channel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindChannel indicates an expected call of FindChannel.
func (mr *MockChannelServiceMockRecorder) FindChannel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindChannel", reflect.TypeOf((*MockChannelService)(nil).FindChannel), arg0)
}

// FindChannelById mocks base method.
func (m *MockChannelService) FindChannelById(arg0 string) (*models.Channel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindChannelById", arg0)
	ret0, _ := ret[0].(*models.Channel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindChannelById indicates an expected call of FindChannelById.
func (mr *MockChannelServiceMockRecorder) FindChannelById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindChannelById", reflect.TypeOf((*MockChannelService)(nil).FindChannelById), arg0)
}

// FindChannelByToken mocks base method.
func (m *MockChannelService) FindChannelByToken(arg0 string) (*models.Channel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindChannelByToken", arg0)
	ret0, _ := ret[0].(*models.Channel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindChannelByToken indicates an expected call of FindChannelByToken.
func (mr *MockChannelServiceMockRecorder) FindChannelByToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindChannelByToken", reflect.TypeOf((*MockChannelService)(nil).FindChannelByToken), arg0)
}
